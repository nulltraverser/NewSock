//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the TellemData datasource.
    /// </summary>
    public sealed partial class TellemDataService
        : global::LightSwitchApplication.TellemData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public TellemDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companys_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companys_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companys_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companys_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companys_Inserting(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companys_Inserted(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companys_Updating(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companys_Updated(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companys_Deleting(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companys_Deleted(global::LightSwitchApplication.Company entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companys_Validate(global::LightSwitchApplication.Company entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Companys_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Company, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Feedbacks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Feedbacks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Feedbacks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Feedbacks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Feedbacks_Inserting(global::LightSwitchApplication.Feedback entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Feedbacks_Inserted(global::LightSwitchApplication.Feedback entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Feedbacks_Updating(global::LightSwitchApplication.Feedback entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Feedbacks_Updated(global::LightSwitchApplication.Feedback entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Feedbacks_Deleting(global::LightSwitchApplication.Feedback entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Feedbacks_Deleted(global::LightSwitchApplication.Feedback entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Feedbacks_Validate(global::LightSwitchApplication.Feedback entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Feedbacks_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Feedback, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_Inserting(global::LightSwitchApplication.Message entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_Inserted(global::LightSwitchApplication.Message entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_Updating(global::LightSwitchApplication.Message entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_Updated(global::LightSwitchApplication.Message entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_Deleting(global::LightSwitchApplication.Message entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_Deleted(global::LightSwitchApplication.Message entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_Validate(global::LightSwitchApplication.Message entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Messages_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Message, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Moods_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Moods_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Moods_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Moods_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Moods_Inserting(global::LightSwitchApplication.Mood entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Moods_Inserted(global::LightSwitchApplication.Mood entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Moods_Updating(global::LightSwitchApplication.Mood entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Moods_Updated(global::LightSwitchApplication.Mood entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Moods_Deleting(global::LightSwitchApplication.Mood entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Moods_Deleted(global::LightSwitchApplication.Mood entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Moods_Validate(global::LightSwitchApplication.Mood entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Moods_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Mood, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void qryMyFeedback_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void qryMyFeedback_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void qryMyFeedback_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.Feedback> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void qryMyFeedback_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Feedback> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void qryMyFeedback_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TellemDataService, global::LightSwitchApplication.Company>
                __CompanysEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TellemDataService, global::LightSwitchApplication.Company>(
                    "Companys",
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Companys_CanInsert,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Companys_CanUpdate,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Companys_CanDelete,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Companys_CanRead,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Companys_Inserting,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Companys_Inserted,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Companys_Updating,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Companys_Updated,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Companys_Deleting,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Companys_Deleted,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Companys_Validate,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Companys_Filter);
            private static bool __Companys_CanInsert(global::LightSwitchApplication.TellemDataService d)
            {
                bool result = true;
                d.Companys_CanInsert(ref result);
                return result;
            }
            private static bool __Companys_CanUpdate(global::LightSwitchApplication.TellemDataService d)
            {
                bool result = true;
                d.Companys_CanUpdate(ref result);
                return result;
            }
            private static bool __Companys_CanDelete(global::LightSwitchApplication.TellemDataService d)
            {
                bool result = true;
                d.Companys_CanDelete(ref result);
                return result;
            }
            private static bool __Companys_CanRead(global::LightSwitchApplication.TellemDataService d)
            {
                bool result = true;
                d.Companys_CanRead(ref result);
                return result;
            }
            private static void __Companys_Inserting(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companys_Inserting(e);
            }
            private static void __Companys_Inserted(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companys_Inserted(e);
            }
            private static void __Companys_Updating(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companys_Updating(e);
            }
            private static void __Companys_Updated(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companys_Updated(e);
            }
            private static void __Companys_Deleting(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companys_Deleting(e);
            }
            private static void __Companys_Deleted(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Company e)
            {
                d.Companys_Deleted(e);
            }
            private static void __Companys_Validate(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Company e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Companys_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Company, bool>> __Companys_Filter(global::LightSwitchApplication.TellemDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Company, bool>> filter = null;
                d.Companys_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TellemDataService, global::LightSwitchApplication.Feedback>
                __FeedbacksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TellemDataService, global::LightSwitchApplication.Feedback>(
                    "Feedbacks",
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Feedbacks_CanInsert,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Feedbacks_CanUpdate,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Feedbacks_CanDelete,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Feedbacks_CanRead,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Feedbacks_Inserting,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Feedbacks_Inserted,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Feedbacks_Updating,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Feedbacks_Updated,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Feedbacks_Deleting,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Feedbacks_Deleted,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Feedbacks_Validate,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Feedbacks_Filter);
            private static bool __Feedbacks_CanInsert(global::LightSwitchApplication.TellemDataService d)
            {
                bool result = true;
                d.Feedbacks_CanInsert(ref result);
                return result;
            }
            private static bool __Feedbacks_CanUpdate(global::LightSwitchApplication.TellemDataService d)
            {
                bool result = true;
                d.Feedbacks_CanUpdate(ref result);
                return result;
            }
            private static bool __Feedbacks_CanDelete(global::LightSwitchApplication.TellemDataService d)
            {
                bool result = true;
                d.Feedbacks_CanDelete(ref result);
                return result;
            }
            private static bool __Feedbacks_CanRead(global::LightSwitchApplication.TellemDataService d)
            {
                bool result = true;
                d.Feedbacks_CanRead(ref result);
                return result;
            }
            private static void __Feedbacks_Inserting(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Feedback e)
            {
                d.Feedbacks_Inserting(e);
            }
            private static void __Feedbacks_Inserted(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Feedback e)
            {
                d.Feedbacks_Inserted(e);
            }
            private static void __Feedbacks_Updating(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Feedback e)
            {
                d.Feedbacks_Updating(e);
            }
            private static void __Feedbacks_Updated(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Feedback e)
            {
                d.Feedbacks_Updated(e);
            }
            private static void __Feedbacks_Deleting(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Feedback e)
            {
                d.Feedbacks_Deleting(e);
            }
            private static void __Feedbacks_Deleted(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Feedback e)
            {
                d.Feedbacks_Deleted(e);
            }
            private static void __Feedbacks_Validate(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Feedback e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Feedbacks_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Feedback, bool>> __Feedbacks_Filter(global::LightSwitchApplication.TellemDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Feedback, bool>> filter = null;
                d.Feedbacks_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TellemDataService, global::LightSwitchApplication.Message>
                __MessagesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TellemDataService, global::LightSwitchApplication.Message>(
                    "Messages",
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Messages_CanInsert,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Messages_CanUpdate,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Messages_CanDelete,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Messages_CanRead,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Messages_Inserting,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Messages_Inserted,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Messages_Updating,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Messages_Updated,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Messages_Deleting,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Messages_Deleted,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Messages_Validate,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Messages_Filter);
            private static bool __Messages_CanInsert(global::LightSwitchApplication.TellemDataService d)
            {
                bool result = true;
                d.Messages_CanInsert(ref result);
                return result;
            }
            private static bool __Messages_CanUpdate(global::LightSwitchApplication.TellemDataService d)
            {
                bool result = true;
                d.Messages_CanUpdate(ref result);
                return result;
            }
            private static bool __Messages_CanDelete(global::LightSwitchApplication.TellemDataService d)
            {
                bool result = true;
                d.Messages_CanDelete(ref result);
                return result;
            }
            private static bool __Messages_CanRead(global::LightSwitchApplication.TellemDataService d)
            {
                bool result = true;
                d.Messages_CanRead(ref result);
                return result;
            }
            private static void __Messages_Inserting(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Message e)
            {
                d.Messages_Inserting(e);
            }
            private static void __Messages_Inserted(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Message e)
            {
                d.Messages_Inserted(e);
            }
            private static void __Messages_Updating(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Message e)
            {
                d.Messages_Updating(e);
            }
            private static void __Messages_Updated(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Message e)
            {
                d.Messages_Updated(e);
            }
            private static void __Messages_Deleting(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Message e)
            {
                d.Messages_Deleting(e);
            }
            private static void __Messages_Deleted(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Message e)
            {
                d.Messages_Deleted(e);
            }
            private static void __Messages_Validate(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Message e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Messages_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Message, bool>> __Messages_Filter(global::LightSwitchApplication.TellemDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Message, bool>> filter = null;
                d.Messages_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TellemDataService, global::LightSwitchApplication.Mood>
                __MoodsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.TellemDataService, global::LightSwitchApplication.Mood>(
                    "Moods",
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Moods_CanInsert,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Moods_CanUpdate,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Moods_CanDelete,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Moods_CanRead,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Moods_Inserting,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Moods_Inserted,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Moods_Updating,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Moods_Updated,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Moods_Deleting,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Moods_Deleted,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Moods_Validate,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Moods_Filter);
            private static bool __Moods_CanInsert(global::LightSwitchApplication.TellemDataService d)
            {
                bool result = true;
                d.Moods_CanInsert(ref result);
                return result;
            }
            private static bool __Moods_CanUpdate(global::LightSwitchApplication.TellemDataService d)
            {
                bool result = true;
                d.Moods_CanUpdate(ref result);
                return result;
            }
            private static bool __Moods_CanDelete(global::LightSwitchApplication.TellemDataService d)
            {
                bool result = true;
                d.Moods_CanDelete(ref result);
                return result;
            }
            private static bool __Moods_CanRead(global::LightSwitchApplication.TellemDataService d)
            {
                bool result = true;
                d.Moods_CanRead(ref result);
                return result;
            }
            private static void __Moods_Inserting(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Mood e)
            {
                d.Moods_Inserting(e);
            }
            private static void __Moods_Inserted(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Mood e)
            {
                d.Moods_Inserted(e);
            }
            private static void __Moods_Updating(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Mood e)
            {
                d.Moods_Updating(e);
            }
            private static void __Moods_Updated(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Mood e)
            {
                d.Moods_Updated(e);
            }
            private static void __Moods_Deleting(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Mood e)
            {
                d.Moods_Deleting(e);
            }
            private static void __Moods_Deleted(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Mood e)
            {
                d.Moods_Deleted(e);
            }
            private static void __Moods_Validate(global::LightSwitchApplication.TellemDataService d, global::LightSwitchApplication.Mood e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Moods_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Mood, bool>> __Moods_Filter(global::LightSwitchApplication.TellemDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Mood, bool>> filter = null;
                d.Moods_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.TellemDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.TellemDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.TellemDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.TellemDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.TellemDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.TellemDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.TellemDataService, global::LightSwitchApplication.Feedback>
                __qryMyFeedbackEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.TellemDataService, global::LightSwitchApplication.Feedback>(
                    "qryMyFeedback",
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__qryMyFeedback_CanExecute,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__qryMyFeedback_Executing,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__qryMyFeedback_Executed,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__qryMyFeedback_Failed,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__qryMyFeedback_PreprocessQuery);
            private static bool __qryMyFeedback_CanExecute(global::LightSwitchApplication.TellemDataService d, bool r)
            {
                d.qryMyFeedback_CanExecute(ref r);
                return r;
            }
            private static void __qryMyFeedback_Executing(global::LightSwitchApplication.TellemDataService d, object[] args)
            {
                d.qryMyFeedback_Executing();
            }
            private static void __qryMyFeedback_Executed(global::LightSwitchApplication.TellemDataService d, object[] args)
            {
                d.qryMyFeedback_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Feedback>)args[0]);
            }
            private static void __qryMyFeedback_Failed(global::LightSwitchApplication.TellemDataService d, object[] args, global::System.Exception ex)
            {
                d.qryMyFeedback_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __qryMyFeedback_PreprocessQuery(global::LightSwitchApplication.TellemDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.Feedback> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.Feedback>)args[0];
                d.qryMyFeedback_PreprocessQuery(ref query);
                return query;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.TellemDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.TellemDataService>(
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.TellemDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.TellemDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.TellemDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.TellemDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
