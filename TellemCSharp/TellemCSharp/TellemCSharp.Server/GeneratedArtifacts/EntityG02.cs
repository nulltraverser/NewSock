

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class Feedback : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Feedback entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Feedback()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Feedback(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Feedback> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Feedback.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Feedback_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Feedback_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ID
        {
            get
            {
                return global::LightSwitchApplication.Feedback.DetailsClass.GetValue(this, global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.ID);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Company
        {
            get
            {
                return global::LightSwitchApplication.Feedback.DetailsClass.GetValue(this, global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.Company);
            }
            set
            {
                global::LightSwitchApplication.Feedback.DetailsClass.SetValue(this, global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.Company, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Company_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Location
        {
            get
            {
                return global::LightSwitchApplication.Feedback.DetailsClass.GetValue(this, global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.Location);
            }
            set
            {
                global::LightSwitchApplication.Feedback.DetailsClass.SetValue(this, global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.Location, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Location_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Employee
        {
            get
            {
                return global::LightSwitchApplication.Feedback.DetailsClass.GetValue(this, global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.Employee);
            }
            set
            {
                global::LightSwitchApplication.Feedback.DetailsClass.SetValue(this, global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.Employee, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employee_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employee_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employee_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Comment
        {
            get
            {
                return global::LightSwitchApplication.Feedback.DetailsClass.GetValue(this, global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.Comment);
            }
            set
            {
                global::LightSwitchApplication.Feedback.DetailsClass.SetValue(this, global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.Comment, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comment_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comment_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Comment_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string UserID
        {
            get
            {
                return global::LightSwitchApplication.Feedback.DetailsClass.GetValue(this, global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.UserID);
            }
            set
            {
                global::LightSwitchApplication.Feedback.DetailsClass.SetValue(this, global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.UserID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void UserID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> DateCreated
        {
            get
            {
                return global::LightSwitchApplication.Feedback.DetailsClass.GetValue(this, global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.DateCreated);
            }
            set
            {
                global::LightSwitchApplication.Feedback.DetailsClass.SetValue(this, global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.DateCreated, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateCreated_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateCreated_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateCreated_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Product
        {
            get
            {
                return global::LightSwitchApplication.Feedback.DetailsClass.GetValue(this, global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.Product);
            }
            set
            {
                global::LightSwitchApplication.Feedback.DetailsClass.SetValue(this, global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.Product, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Product_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Product_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Product_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Mood Mood1
        {
            get
            {
                return global::LightSwitchApplication.Feedback.DetailsClass.GetValue(this, global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.Mood1);
            }
            set
            {
                global::LightSwitchApplication.Feedback.DetailsClass.SetValue(this, global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.Mood1, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Mood1_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Mood1_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Mood1_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Feedback,
                global::LightSwitchApplication.Feedback.DetailsClass,
                global::LightSwitchApplication.Feedback.DetailsClass.IImplementation,
                global::LightSwitchApplication.Feedback.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass>.Entry
                __FeedbackEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass>.Entry(
                    global::LightSwitchApplication.Feedback.DetailsClass.__Feedback_CreateNew,
                    global::LightSwitchApplication.Feedback.DetailsClass.__Feedback_Created,
                    global::LightSwitchApplication.Feedback.DetailsClass.__Feedback_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Feedback __Feedback_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Feedback> es)
            {
                return new global::LightSwitchApplication.Feedback(es);
            }
            private static void __Feedback_Created(global::LightSwitchApplication.Feedback e)
            {
                e.Feedback_Created();
            }
            private static bool __Feedback_AllowSaveWithErrors(global::LightSwitchApplication.Feedback e)
            {
                bool result = false;
                e.Feedback_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Feedback.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, int> ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string> Company
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.Company) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string> Location
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.Location) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string> Employee
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.Employee) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string> Comment
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.Comment) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string> UserID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.UserID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, global::System.Nullable<global::System.DateTime>> DateCreated
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.DateCreated) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string> Product
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.Product) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, global::LightSwitchApplication.Mood> Mood1
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.Mood1) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, global::LightSwitchApplication.Mood>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ID { get; }
                new string Company { get; set; }
                new string Location { get; set; }
                new string Employee { get; set; }
                new string Comment { get; set; }
                new string UserID { get; set; }
                new global::System.Nullable<global::System.DateTime> DateCreated { get; set; }
                new string Product { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation Mood1 { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, int>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, int>.Entry(
                        "ID",
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._ID_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Feedback.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, int>.Data> c, global::LightSwitchApplication.Feedback.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static bool _ID_ComputeIsReadOnly(global::LightSwitchApplication.Feedback e)
                {
                    bool result = false;
                    e.ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_Validate(global::LightSwitchApplication.Feedback e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_Validate(r);
                }
                private static int _ID_GetImplementationValue(global::LightSwitchApplication.Feedback.DetailsClass d)
                {
                    return d.ImplementationEntity.ID;
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.Feedback e)
                {
                    e.ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Entry
                    Company = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Entry(
                        "Company",
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Company_Stub,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Company_ComputeIsReadOnly,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Company_Validate,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Company_GetImplementationValue,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Company_SetImplementationValue,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Company_OnValueChanged);
                private static void _Company_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Feedback.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Data> c, global::LightSwitchApplication.Feedback.DetailsClass d, object sf)
                {
                    c(d, ref d._Company, sf);
                }
                private static bool _Company_ComputeIsReadOnly(global::LightSwitchApplication.Feedback e)
                {
                    bool result = false;
                    e.Company_IsReadOnly(ref result);
                    return result;
                }
                private static void _Company_Validate(global::LightSwitchApplication.Feedback e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Company_Validate(r);
                }
                private static string _Company_GetImplementationValue(global::LightSwitchApplication.Feedback.DetailsClass d)
                {
                    return d.ImplementationEntity.Company;
                }
                private static void _Company_SetImplementationValue(global::LightSwitchApplication.Feedback.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Company = v;
                }
                private static void _Company_OnValueChanged(global::LightSwitchApplication.Feedback e)
                {
                    e.Company_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Entry
                    Location = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Entry(
                        "Location",
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Location_Stub,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Location_ComputeIsReadOnly,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Location_Validate,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Location_GetImplementationValue,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Location_SetImplementationValue,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Location_OnValueChanged);
                private static void _Location_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Feedback.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Data> c, global::LightSwitchApplication.Feedback.DetailsClass d, object sf)
                {
                    c(d, ref d._Location, sf);
                }
                private static bool _Location_ComputeIsReadOnly(global::LightSwitchApplication.Feedback e)
                {
                    bool result = false;
                    e.Location_IsReadOnly(ref result);
                    return result;
                }
                private static void _Location_Validate(global::LightSwitchApplication.Feedback e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Location_Validate(r);
                }
                private static string _Location_GetImplementationValue(global::LightSwitchApplication.Feedback.DetailsClass d)
                {
                    return d.ImplementationEntity.Location;
                }
                private static void _Location_SetImplementationValue(global::LightSwitchApplication.Feedback.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Location = v;
                }
                private static void _Location_OnValueChanged(global::LightSwitchApplication.Feedback e)
                {
                    e.Location_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Entry
                    Employee = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Entry(
                        "Employee",
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Employee_Stub,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Employee_ComputeIsReadOnly,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Employee_Validate,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Employee_GetImplementationValue,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Employee_SetImplementationValue,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Employee_OnValueChanged);
                private static void _Employee_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Feedback.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Data> c, global::LightSwitchApplication.Feedback.DetailsClass d, object sf)
                {
                    c(d, ref d._Employee, sf);
                }
                private static bool _Employee_ComputeIsReadOnly(global::LightSwitchApplication.Feedback e)
                {
                    bool result = false;
                    e.Employee_IsReadOnly(ref result);
                    return result;
                }
                private static void _Employee_Validate(global::LightSwitchApplication.Feedback e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Employee_Validate(r);
                }
                private static string _Employee_GetImplementationValue(global::LightSwitchApplication.Feedback.DetailsClass d)
                {
                    return d.ImplementationEntity.Employee;
                }
                private static void _Employee_SetImplementationValue(global::LightSwitchApplication.Feedback.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Employee = v;
                }
                private static void _Employee_OnValueChanged(global::LightSwitchApplication.Feedback e)
                {
                    e.Employee_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Entry
                    Comment = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Entry(
                        "Comment",
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Comment_Stub,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Comment_ComputeIsReadOnly,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Comment_Validate,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Comment_GetImplementationValue,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Comment_SetImplementationValue,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Comment_OnValueChanged);
                private static void _Comment_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Feedback.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Data> c, global::LightSwitchApplication.Feedback.DetailsClass d, object sf)
                {
                    c(d, ref d._Comment, sf);
                }
                private static bool _Comment_ComputeIsReadOnly(global::LightSwitchApplication.Feedback e)
                {
                    bool result = false;
                    e.Comment_IsReadOnly(ref result);
                    return result;
                }
                private static void _Comment_Validate(global::LightSwitchApplication.Feedback e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Comment_Validate(r);
                }
                private static string _Comment_GetImplementationValue(global::LightSwitchApplication.Feedback.DetailsClass d)
                {
                    return d.ImplementationEntity.Comment;
                }
                private static void _Comment_SetImplementationValue(global::LightSwitchApplication.Feedback.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Comment = v;
                }
                private static void _Comment_OnValueChanged(global::LightSwitchApplication.Feedback e)
                {
                    e.Comment_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Entry
                    UserID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Entry(
                        "UserID",
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._UserID_Stub,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._UserID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._UserID_Validate,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._UserID_GetImplementationValue,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._UserID_SetImplementationValue,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._UserID_OnValueChanged);
                private static void _UserID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Feedback.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Data> c, global::LightSwitchApplication.Feedback.DetailsClass d, object sf)
                {
                    c(d, ref d._UserID, sf);
                }
                private static bool _UserID_ComputeIsReadOnly(global::LightSwitchApplication.Feedback e)
                {
                    bool result = false;
                    e.UserID_IsReadOnly(ref result);
                    return result;
                }
                private static void _UserID_Validate(global::LightSwitchApplication.Feedback e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.UserID_Validate(r);
                }
                private static string _UserID_GetImplementationValue(global::LightSwitchApplication.Feedback.DetailsClass d)
                {
                    return d.ImplementationEntity.UserID;
                }
                private static void _UserID_SetImplementationValue(global::LightSwitchApplication.Feedback.DetailsClass d, string v)
                {
                    d.ImplementationEntity.UserID = v;
                }
                private static void _UserID_OnValueChanged(global::LightSwitchApplication.Feedback e)
                {
                    e.UserID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    DateCreated = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "DateCreated",
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._DateCreated_Stub,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._DateCreated_ComputeIsReadOnly,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._DateCreated_Validate,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._DateCreated_GetImplementationValue,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._DateCreated_SetImplementationValue,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._DateCreated_OnValueChanged);
                private static void _DateCreated_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Feedback.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.Feedback.DetailsClass d, object sf)
                {
                    c(d, ref d._DateCreated, sf);
                }
                private static bool _DateCreated_ComputeIsReadOnly(global::LightSwitchApplication.Feedback e)
                {
                    bool result = false;
                    e.DateCreated_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateCreated_Validate(global::LightSwitchApplication.Feedback e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateCreated_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _DateCreated_GetImplementationValue(global::LightSwitchApplication.Feedback.DetailsClass d)
                {
                    return d.ImplementationEntity.DateCreated;
                }
                private static void _DateCreated_SetImplementationValue(global::LightSwitchApplication.Feedback.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.DateCreated = global::LightSwitchApplication.Feedback.DetailsClass.ClearDateTimeKind(v);
                }
                private static void _DateCreated_OnValueChanged(global::LightSwitchApplication.Feedback e)
                {
                    e.DateCreated_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Entry
                    Product = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Entry(
                        "Product",
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Product_Stub,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Product_ComputeIsReadOnly,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Product_Validate,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Product_GetImplementationValue,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Product_SetImplementationValue,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Product_OnValueChanged);
                private static void _Product_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Feedback.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Data> c, global::LightSwitchApplication.Feedback.DetailsClass d, object sf)
                {
                    c(d, ref d._Product, sf);
                }
                private static bool _Product_ComputeIsReadOnly(global::LightSwitchApplication.Feedback e)
                {
                    bool result = false;
                    e.Product_IsReadOnly(ref result);
                    return result;
                }
                private static void _Product_Validate(global::LightSwitchApplication.Feedback e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Product_Validate(r);
                }
                private static string _Product_GetImplementationValue(global::LightSwitchApplication.Feedback.DetailsClass d)
                {
                    return d.ImplementationEntity.Product;
                }
                private static void _Product_SetImplementationValue(global::LightSwitchApplication.Feedback.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Product = v;
                }
                private static void _Product_OnValueChanged(global::LightSwitchApplication.Feedback e)
                {
                    e.Product_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, global::LightSwitchApplication.Mood>.Entry
                    Mood1 = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, global::LightSwitchApplication.Mood>.Entry(
                        "Mood1",
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Mood1_Stub,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Mood1_ComputeIsReadOnly,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Mood1_Validate,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Mood1_GetCoreImplementationValue,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Mood1_GetImplementationValue,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Mood1_SetImplementationValue,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Mood1_Refresh,
                        global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties._Mood1_OnValueChanged);
                private static void _Mood1_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Feedback.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, global::LightSwitchApplication.Mood>.Data> c, global::LightSwitchApplication.Feedback.DetailsClass d, object sf)
                {
                    c(d, ref d._Mood1, sf);
                }
                private static bool _Mood1_ComputeIsReadOnly(global::LightSwitchApplication.Feedback e)
                {
                    bool result = false;
                    e.Mood1_IsReadOnly(ref result);
                    return result;
                }
                private static void _Mood1_Validate(global::LightSwitchApplication.Feedback e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Mood1_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _Mood1_GetCoreImplementationValue(global::LightSwitchApplication.Feedback.DetailsClass d)
                {
                    return d.ImplementationEntity.Mood1;
                }
                private static global::LightSwitchApplication.Mood _Mood1_GetImplementationValue(global::LightSwitchApplication.Feedback.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass>(global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.Mood1, ref d._Mood1);
                }
                private static void _Mood1_SetImplementationValue(global::LightSwitchApplication.Feedback.DetailsClass d, global::LightSwitchApplication.Mood v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.Mood1, ref d._Mood1, (i, ev) => i.Mood1 = ev, v);
                }
                private static void _Mood1_Refresh(global::LightSwitchApplication.Feedback.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.Feedback.DetailsClass.PropertySetProperties.Mood1, ref d._Mood1);
                }
                private static void _Mood1_OnValueChanged(global::LightSwitchApplication.Feedback e)
                {
                    e.Mood1_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, int>.Data _ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Data _Company;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Data _Location;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Data _Employee;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Data _Comment;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Data _UserID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _DateCreated;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, string>.Data _Product;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass, global::LightSwitchApplication.Mood>.Data _Mood1;
            
        }
    
        #endregion
    }
    
    #endregion
}
