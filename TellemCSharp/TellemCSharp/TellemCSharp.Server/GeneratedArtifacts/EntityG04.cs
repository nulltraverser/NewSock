

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class Mood : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the Mood entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Mood()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Mood(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Mood> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.Mood.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Mood_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Mood_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int ID
        {
            get
            {
                return global::LightSwitchApplication.Mood.DetailsClass.GetValue(this, global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties.ID);
            }
            set
            {
                global::LightSwitchApplication.Mood.DetailsClass.SetValue(this, global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties.ID, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ID_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            get
            {
                return global::LightSwitchApplication.Mood.DetailsClass.GetValue(this, global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties.Description);
            }
            set
            {
                global::LightSwitchApplication.Mood.DetailsClass.SetValue(this, global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties.Description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] Emoticon
        {
            get
            {
                return global::LightSwitchApplication.Mood.DetailsClass.GetValue(this, global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties.Emoticon);
            }
            set
            {
                global::LightSwitchApplication.Mood.DetailsClass.SetValue(this, global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties.Emoticon, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Emoticon_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Emoticon_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Emoticon_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.Feedback> Feedbacks
        {
            get
            {
                return global::LightSwitchApplication.Mood.DetailsClass.GetValue(this, global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties.Feedbacks);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.Feedback> FeedbacksQuery
        {
            get
            {
                return global::LightSwitchApplication.Mood.DetailsClass.GetQuery(this, global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties.Feedbacks);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.Mood,
                global::LightSwitchApplication.Mood.DetailsClass,
                global::LightSwitchApplication.Mood.DetailsClass.IImplementation,
                global::LightSwitchApplication.Mood.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties.ID;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass>.Entry
                __MoodEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass>.Entry(
                    global::LightSwitchApplication.Mood.DetailsClass.__Mood_CreateNew,
                    global::LightSwitchApplication.Mood.DetailsClass.__Mood_Created,
                    global::LightSwitchApplication.Mood.DetailsClass.__Mood_AllowSaveWithErrors);
            private static global::LightSwitchApplication.Mood __Mood_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.Mood> es)
            {
                return new global::LightSwitchApplication.Mood(es);
            }
            private static void __Mood_Created(global::LightSwitchApplication.Mood e)
            {
                e.Mood_Created();
            }
            private static bool __Mood_AllowSaveWithErrors(global::LightSwitchApplication.Mood e)
            {
                bool result = false;
                e.Mood_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.Mood.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, int> ID
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties.ID) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, string> Description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties.Description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, byte[]> Emoticon
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties.Emoticon) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, global::LightSwitchApplication.Feedback> Feedbacks
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties.Feedbacks) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, global::LightSwitchApplication.Feedback>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int ID { get; set; }
                new string Description { get; set; }
                new byte[] Emoticon { get; set; }
                new global::System.Collections.IEnumerable Feedbacks { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, int>.Entry
                    ID = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, int>.Entry(
                        "ID",
                        global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties._ID_Stub,
                        global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties._ID_ComputeIsReadOnly,
                        global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties._ID_Validate,
                        global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties._ID_GetImplementationValue,
                        global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties._ID_SetImplementationValue,
                        global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties._ID_OnValueChanged);
                private static void _ID_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Mood.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, int>.Data> c, global::LightSwitchApplication.Mood.DetailsClass d, object sf)
                {
                    c(d, ref d._ID, sf);
                }
                private static bool _ID_ComputeIsReadOnly(global::LightSwitchApplication.Mood e)
                {
                    bool result = false;
                    e.ID_IsReadOnly(ref result);
                    return result;
                }
                private static void _ID_Validate(global::LightSwitchApplication.Mood e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ID_Validate(r);
                }
                private static int _ID_GetImplementationValue(global::LightSwitchApplication.Mood.DetailsClass d)
                {
                    return d.ImplementationEntity.ID;
                }
                private static void _ID_SetImplementationValue(global::LightSwitchApplication.Mood.DetailsClass d, int v)
                {
                    d.ImplementationEntity.ID = v;
                }
                private static void _ID_OnValueChanged(global::LightSwitchApplication.Mood e)
                {
                    e.ID_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, string>.Entry
                    Description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, string>.Entry(
                        "Description",
                        global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties._Description_Stub,
                        global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties._Description_ComputeIsReadOnly,
                        global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties._Description_Validate,
                        global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties._Description_GetImplementationValue,
                        global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties._Description_SetImplementationValue,
                        global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties._Description_OnValueChanged);
                private static void _Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Mood.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, string>.Data> c, global::LightSwitchApplication.Mood.DetailsClass d, object sf)
                {
                    c(d, ref d._Description, sf);
                }
                private static bool _Description_ComputeIsReadOnly(global::LightSwitchApplication.Mood e)
                {
                    bool result = false;
                    e.Description_IsReadOnly(ref result);
                    return result;
                }
                private static void _Description_Validate(global::LightSwitchApplication.Mood e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Description_Validate(r);
                }
                private static string _Description_GetImplementationValue(global::LightSwitchApplication.Mood.DetailsClass d)
                {
                    return d.ImplementationEntity.Description;
                }
                private static void _Description_SetImplementationValue(global::LightSwitchApplication.Mood.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Description = v;
                }
                private static void _Description_OnValueChanged(global::LightSwitchApplication.Mood e)
                {
                    e.Description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, byte[]>.Entry
                    Emoticon = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, byte[]>.Entry(
                        "Emoticon",
                        global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties._Emoticon_Stub,
                        global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties._Emoticon_ComputeIsReadOnly,
                        global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties._Emoticon_Validate,
                        global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties._Emoticon_GetImplementationValue,
                        global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties._Emoticon_SetImplementationValue,
                        global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties._Emoticon_OnValueChanged);
                private static void _Emoticon_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Mood.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.Mood.DetailsClass d, object sf)
                {
                    c(d, ref d._Emoticon, sf);
                }
                private static bool _Emoticon_ComputeIsReadOnly(global::LightSwitchApplication.Mood e)
                {
                    bool result = false;
                    e.Emoticon_IsReadOnly(ref result);
                    return result;
                }
                private static void _Emoticon_Validate(global::LightSwitchApplication.Mood e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Emoticon_Validate(r);
                }
                private static byte[] _Emoticon_GetImplementationValue(global::LightSwitchApplication.Mood.DetailsClass d)
                {
                    return d.ImplementationEntity.Emoticon;
                }
                private static void _Emoticon_SetImplementationValue(global::LightSwitchApplication.Mood.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.Emoticon = v;
                }
                private static void _Emoticon_OnValueChanged(global::LightSwitchApplication.Mood e)
                {
                    e.Emoticon_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, global::LightSwitchApplication.Feedback>.Entry
                    Feedbacks = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, global::LightSwitchApplication.Feedback>.Entry(
                        "Feedbacks",
                        global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties._Feedbacks_Stub,
                        global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties._Feedbacks_GetReferencedEntities,
                        global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties._Feedbacks_GetEntityCollection);
                private static void _Feedbacks_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.Mood.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, global::LightSwitchApplication.Feedback>.Data> c, global::LightSwitchApplication.Mood.DetailsClass d, object sf)
                {
                    c(d, ref d._Feedbacks, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.Feedback> _Feedbacks_GetReferencedEntities(global::LightSwitchApplication.Mood.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.Feedback, global::LightSwitchApplication.Feedback.DetailsClass>(global::LightSwitchApplication.Mood.DetailsClass.PropertySetProperties.Feedbacks, ref d._Feedbacks);
                }
                private static global::System.Collections.IEnumerable _Feedbacks_GetEntityCollection(global::LightSwitchApplication.Mood.DetailsClass d)
                {
                    return d.ImplementationEntity.Feedbacks;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, int>.Data _ID;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, string>.Data _Description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, byte[]>.Data _Emoticon;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.Mood, global::LightSwitchApplication.Mood.DetailsClass, global::LightSwitchApplication.Feedback>.Data _Feedbacks;
            
        }
    
        #endregion
    }
    
    #endregion
}
